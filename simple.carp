(load "cv.carp")
(load "OpenGL.carp")

(def t 0)

(defn ccomp [x]
  (/ (from-int (Int.bit-and x 255)) 255.0f))

(defn-do update []
  (update! t inc)
  (GL.clearColor (ccomp (Generics.twice t)) 0.0f (ccomp (Generics.halved t)) (ccomp t))
  (GL.clear GL.COLOR_BUFFER_BIT)
  (GL.flush)
  )

(defn query [q]
  (match-ref &q
             (CV.Query.Width) 512
             (CV.Query.Height) 512
             (CV.Query.X-pos) 100
             (CV.Query.Y-pos) 200
             ))

(defn handle [e]
  (match-ref &e
         (CV.Event.None) (IO.println* e)
         (CV.Event.Init) (IO.println* e)
         (CV.Event.Term) (IO.println* e)
         (CV.Event.GLInit) (IO.println* e)
         (CV.Event.GLTerm) (IO.println* e)
         (CV.Event.Up k) (IO.println* e)
         (CV.Event.Down k) (IO.println* e)
         (CV.Event.Unicode c) (IO.println* e)
         (CV.Event.Motion x y) (IO.println* e)
         (CV.Event.Update) (update)
;         (CV.Event.Width) 512l
         ))

(defn main []
    (ignore (CV.run query handle)))
